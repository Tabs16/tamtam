instr 104
/* Additive synthesis

   p4 : unique instance ID
   p5 : frequency in Hz
   p6 : spread factor
   p7 : amplitude gain (dB)
*/

ion = 1
inst = p4
Sfreq sprintf  "add.%d.freq", inst   ; freq channel
Sfac  sprintf  "add.%d.fac", inst    ; spread factor
Samp  sprintf  "add.%d.gain" , inst   ; amp channel
Son   sprintf  "add.%d.on"  , inst  ; instance control channel

chnset ion, Son
chnset p5, Sfreq
chnset p6, Sfac
chnset p7, Samp
  

kfr   chnget  Sfreq
kfac  chnget  Sfac
kamp  chnget  Samp
kon   chnget  Son

if kon == 0 then
printf "add:%d OFF\n", 1, inst
turnoff
endif

ka   port ampdb(kamp), .002
ks   port kfac, .002
kf   port kfr, .002

kfreq1	=		kf
kfreq2	=		kfreq1*ks
kfreq3	=		kfreq2*ks
kfreq4	=		kfreq3*ks
kfreq5	=		kfreq4*ks
kfreq6	=		kfreq5*ks
kfreq7	=		kfreq6*ks
kfreq8	=		kfreq7*ks

kr1		randomi	.995, 1.005, .5
kr2		randomi	.995, 1.005, .34
kr3		randomi	.995, 1.005, .54
kr4		randomi	.995, 1.005, .67
kr5		randomi	.995, 1.005, .25
kr6		randomi	.995, 1.005, .33
kr7		randomi	.995, 1.005, .42
kr8		randomi	.995, 1.005, .49

asig1		oscili		5000, kfreq1*kr1, 40
asig2		oscili		5000, kfreq2*kr2, 40
asig3		oscili		5000, kfreq3*kr3, 40
asig4		oscili		5000, kfreq4*kr4, 40
asig5		oscili		5000, kfreq5*kr5, 40
asig6		oscili		5000, kfreq6*kr6, 40
asig7		oscili		5000, kfreq7*kr7, 40
asig8		oscili		5000, kfreq8*kr8, 40

aoutL	=		(asig1+asig3+asig5+asig7)
aoutR	=		(asig2+asig4+asig6+asig8)

kenv		linen	1, 0.002, p3, p3*0.75

		outs		aoutL*ka*kenv,aoutR*ka*kenv

printf_i "add:%d \n", 1, inst
endin
